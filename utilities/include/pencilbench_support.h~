#include<pencil.h>
#include<stdio.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <assert.h>
#include <time.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <sched.h>
#include <math.h>
#ifdef _OPENMP
# include <omp.h>
#endif


/* Macros to reference an array. Generic for heap and stack arrays
   (C99).  Each array dimensionality has his own macro, to be used at
   declaration or as a function argument.
   Example:
   int b[x] => PENCILBENCH_1D_ARRAY(b, x)
   int A[N][N] => PENCILBENCH_2D_ARRAY(A, N, N)
*/
# ifndef PENCILBENCH_STACK_ARRAYS
#  define PENCILBENCH_ARRAY(x) *x
#  define PENCILBENCH_FREE_ARRAY(x) free((void*)x);
#  define PENCILBENCH_DECL_VAR(x) (*x)
# else
#  define PENCILBENCH_ARRAY(x) x
#  define PENCILBENCH_FREE_ARRAY(x)
#  define PENCILBENCH_DECL_VAR(x) x
# endif
/* Macros for using arrays in the function prototypes. */
# define PENCILBENCH_1D(var, dim1,ddim1) var[PENCILBENCH_C99_SELECT(dim1,ddim1) + PENCILBENCH_PADDING_FACTOR]
# define PENCILBENCH_2D(var, dim1, dim2, ddim1, ddim2) var[PENCILBENCH_C99_SELECT(dim1,ddim1) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim2,ddim2) + PENCILBENCH_PADDING_FACTOR]
# define PENCILBENCH_3D(var, dim1, dim2, dim3, ddim1, ddim2, ddim3) var[PENCILBENCH_C99_SELECT(dim1,ddim1) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim2,ddim2) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim3,ddim3) + PENCILBENCH_PADDING_FACTOR]
# define PENCILBENCH_4D(var, dim1, dim2, dim3, dim4, ddim1, ddim2, ddim3, ddim4) var[PENCILBENCH_C99_SELECT(dim1,ddim1) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim2,ddim2) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim3,ddim3) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim4,ddim4) + PENCILBENCH_PADDING_FACTOR]
# define PENCILBENCH_5D(var, dim1, dim2, dim3, dim4, dim5, ddim1, ddim2, ddim3, ddim4, ddim5) var[PENCILBENCH_C99_SELECT(dim1,ddim1) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim2,ddim2) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim3,ddim3) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim4,ddim4) + PENCILBENCH_PADDING_FACTOR][PENCILBENCH_C99_SELECT(dim5,ddim5) + PENCILBENCH_PADDING_FACTOR]


/* Macros to allocate heap arrays.
   Example:
   PENCILBENCH_alloc_2d_array(N, M, double) => allocates N x M x sizeof(double)
					  and returns a pointer to the 2d array
 */
# define PENCILBENCH_ALLOC_1D_ARRAY(n1, type)	\
  (type(*)[n1 + PENCILBENCH_PADDING_FACTOR])PENCILBENCH_alloc_data (n1 + PENCILBENCH_PADDING_FACTOR, sizeof(type))
# define PENCILBENCH_ALLOC_2D_ARRAY(n1, n2, type)		\
  (type(*)[n1 + PENCILBENCH_PADDING_FACTOR][n2 + PENCILBENCH_PADDING_FACTOR])PENCILBENCH_alloc_data ((n1 + PENCILBENCH_PADDING_FACTOR) * (n2 + PENCILBENCH_PADDING_FACTOR), sizeof(type))
# define PENCILBENCH_ALLOC_3D_ARRAY(n1, n2, n3, type)		\
  (type(*)[n1 + PENCILBENCH_PADDING_FACTOR][n2 + PENCILBENCH_PADDING_FACTOR][n3 + PENCILBENCH_PADDING_FACTOR])PENCILBENCH_alloc_data ((n1 + PENCILBENCH_PADDING_FACTOR) * (n2 + PENCILBENCH_PADDING_FACTOR) * (n3 + PENCILBENCH_PADDING_FACTOR), sizeof(type))
# define PENCILBENCH_ALLOC_4D_ARRAY(n1, n2, n3, n4, type)			\
  (type(*)[n1 + PENCILBENCH_PADDING_FACTOR][n2 + PENCILBENCH_PADDING_FACTOR][n3 + PENCILBENCH_PADDING_FACTOR][n4 + PENCILBENCH_PADDING_FACTOR])PENCILBENCH_alloc_data ((n1 + PENCILBENCH_PADDING_FACTOR) * (n2 + PENCILBENCH_PADDING_FACTOR) * (n3 + PENCILBENCH_PADDING_FACTOR) * (n4 + PENCILBENCH_PADDING_FACTOR), sizeof(type))
# define PENCILBENCH_ALLOC_5D_ARRAY(n1, n2, n3, n4, n5, type)		\
  (type(*)[n1 + PENCILBENCH_PADDING_FACTOR][n2 + PENCILBENCH_PADDING_FACTOR][n3 + PENCILBENCH_PADDING_FACTOR][n4 + PENCILBENCH_PADDING_FACTOR][n5 + PENCILBENCH_PADDING_FACTOR])PENCILBENCH_alloc_data ((n1 + PENCILBENCH_PADDING_FACTOR) * (n2 + PENCILBENCH_PADDING_FACTOR) * (n3 + PENCILBENCH_PADDING_FACTOR) * (n4 + PENCILBENCH_PADDING_FACTOR) * (n5 + PENCILBENCH_PADDING_FACTOR), sizeof(type))

/* Macros for array declaration. */
# ifndef PENCILBENCH_STACK_ARRAYS
#  define PENCILBENCH_1D_ARRAY_DECL(var, type, dim1, ddim1)		\
  type PENCILBENCH_1D(PENCILBENCH_DECL_VAR(var), dim1, ddim1); \
  var = PENCILBENCH_ALLOC_1D_ARRAY(PENCILBENCH_C99_SELECT(dim1, ddim1), type);
#  define PENCILBENCH_2D_ARRAY_DECL(var, type, dim1, dim2, ddim1, ddim2)	\
  type PENCILBENCH_2D(PENCILBENCH_DECL_VAR(var), dim1, dim2, ddim1, ddim2); \
  var = PENCILBENCH_ALLOC_2D_ARRAY(PENCILBENCH_C99_SELECT(dim1, ddim1), PENCILBENCH_C99_SELECT(dim2, ddim2), type);
#  define PENCILBENCH_3D_ARRAY_DECL(var, type, dim1, dim2, dim3, ddim1, ddim2, ddim3) \
  type PENCILBENCH_3D(PENCILBENCH_DECL_VAR(var), dim1, dim2, dim3, ddim1, ddim2, ddim3); \
  var = PENCILBENCH_ALLOC_3D_ARRAY(PENCILBENCH_C99_SELECT(dim1, ddim1), PENCILBENCH_C99_SELECT(dim2, ddim2), PENCILBENCH_C99_SELECT(dim3, ddim3), type);
#  define PENCILBENCH_4D_ARRAY_DECL(var, type, dim1, dim2, dim3, dim4, ddim1, ddim2, ddim3, ddim4) \
  type PENCILBENCH_4D(PENCILBENCH_DECL_VAR(var), dim1, dim2, ,dim3, dim4, ddim1, ddim2, ddim3, ddim4); \
  var = PENCILBENCH_ALLOC_4D_ARRAY(PENCILBENCH_C99_SELECT(dim1, ddim1), PENCILBENCH_C99_SELECT(dim2, ddim2), PENCILBENCH_C99_SELECT(dim3, ddim3), PENCILBENCH_C99_SELECT(dim4, ddim4), type);
#  define PENCILBENCH_5D_ARRAY_DECL(var, type, dim1, dim2, dim3, dim4, dim5, ddim1, ddim2, ddim3, ddim4, ddim5) \
  type PENCILBENCH_5D(PENCILBENCH_DECL_VAR(var), dim1, dim2, dim3, dim4, dim5, ddim1, ddim2, ddim3, ddim4, ddim5); \
  var = PENCILBENCH_ALLOC_5D_ARRAY(PENCILBENCH_C99_SELECT(dim1, ddim1), PENCILBENCH_C99_SELECT(dim2, ddim2), PENCILBENCH_C99_SELECT(dim3, ddim3), PENCILBENCH_C99_SELECT(dim4, ddim4), PENCILBENCH_C99_SELECT(dim5, ddim5), type);
# else
#  define PENCILBENCH_1D_ARRAY_DECL(var, type, dim1, ddim1)		\
  type PENCILBENCH_1D(PENCILBENCH_DECL_VAR(var), dim1, ddim1);
#  define PENCILBENCH_2D_ARRAY_DECL(var, type, dim1, dim2, ddim1, ddim2)	\
  type PENCILBENCH_2D(PENCILBENCH_DECL_VAR(var), dim1, dim2, ddim1, ddim2);
#  define PENCILBENCH_3D_ARRAY_DECL(var, type, dim1, dim2, dim3, ddim1, ddim2, ddim3) \
  type PENCILBENCH_3D(PENCILBENCH_DECL_VAR(var), dim1, dim2, dim3, ddim1, ddim2, ddim3);
#  define PENCILBENCH_4D_ARRAY_DECL(var, type, dim1, dim2, dim3, dim4, ddim1, ddim2, ddim3, ddim4) \
  type PENCILBENCH_4D(PENCILBENCH_DECL_VAR(var), dim1, dim2, dim3, dim4, ddim1, ddim2, ddim3, ddim4);
#  define PENCILBENCH_5D_ARRAY_DECL(var, type, dim1, dim2, dim3, dim4, dim5, ddim1, ddim2, ddim3, ddim4, ddim5) \
  type PENCILBENCH_5D(PENCILBENCH_DECL_VAR(var), dim1, dim2, dim3, dim4, dim5, ddim1, ddim2, ddim3, ddim4, ddim5);
# endif




/* Timing support. */

double pencilbench_timer_start();
double pencilbench_timer_stop();
double pencilbench_timer_print();

